import os
from flask import Flask, request
from telegram import Update, Bot, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")

app = Flask(__name__)
bot = Bot(token=TOKEN)

keyboard = ReplyKeyboardMarkup(
    [["üí∞ –ë–∞–ª–∞–Ω—Å", "üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç"], ["üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"]],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–ª–∞—á–Ω—ã–π –º–∞–π–Ω–∏–Ω–≥ –±–æ—Ç!", reply_markup=keyboard
    )

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üí∞ –ë–∞–ª–∞–Ω—Å":
        await update.message.reply_text("–í–∞—à –±–∞–ª–∞–Ω—Å: 0 USDT")
    elif text == "üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç":
        await update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    elif text == "üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞":
        await update.message.reply_text("–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/your_bot?start=ref123")
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await update.message.reply_text("–ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å.")
    else:
        await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.")

@app.route(f"/webhook/{TOKEN}", methods=["POST"])
async def webhook():
    data = request.get_json(force=True)
    update = Update.de_json(data, bot)
    await application.process_update(update)
    return "OK"

async def set_webhook():
    await bot.set_webhook(url=f"{WEBHOOK_URL}/webhook/{TOKEN}")

if __name__ == "__main__":
    import asyncio

    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

    loop = asyncio.get_event_loop()
    loop.run_until_complete(set_webhook())
    app.run(host="0.0.0.0", port=10000)

from flask import request

# Webhook –¥–ª—è CryptoBot
@app.route('/cryptobot', methods=['POST'])
def cryptobot_webhook():
    data = request.json
    if data and 'invoice_id' in data:
        print("üí∏ –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç CryptoBot:", data)
        # –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É: –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ö–µ—à—Ä–µ–π—Ç–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ —Ç.–¥.
    return 'ok'
